<?xml version="1.0" encoding="UTF-8"?>
<project name="mv_bcs_xsd" default="mv_bcs_xsd" basedir=".">
	<target name="mv_bcs_xsd">
		
		<property name="targetdir" value="${basedir}/../src"></property>
		<property name="packageName" value="bean"/>
		
		<taskdef name="castor-srcgen"
			classname="org.castor.anttask.CastorCodeGenTask"/>
		<delete failonerror="no">
			<fileset dir="${targetdir}/${packageName}">
				<include name="*.java"/>
				<include name=".castor.cdr"/>
			</fileset>
			<fileset dir="${targetdir}/${packageName}/descriptors">
				<include name="*.java"/>
			</fileset>
		</delete>

		<castor-srcgen file="mv_bcs.xsd"
			bindingfile="${basedir}/binding.xml"
			todir="${targetdir}"
			package="${packageName}"
			types="j2"
			properties="${basedir}/castorbuilder.properties"
			warnings="true"/>
		
		<!-- remove all nsURI assignment and setNameSpaceURI method calls in descriptor files -->
		<exec executable="${basedir}/sfk" output="NUL">
			<arg value="list"/>
			<arg value="${targetdir}/${packageName}/descriptors"/>
			<arg value=".java"/>
			<arg value="+filefilter"/>
			<arg value="-write"/>
			<arg value="-!_nsURI = "/>
			<arg value="-!desc.setNameSpaceURI"/>
			<arg value="-yes"/>
		</exec>
		
		<!-- Apply patches.
			Some elements have the attribute "valid" of type boolean.
			Castor is hard-coded to generate an isValid method to validate
			the XML structure. For boolean members of classes, it also
			generates an is"Method" method, where "Method" is the name of the
			boolean member. This causes a clash if the attribute name is "valid".
			This patch eliminates the is"Method" method where appropriate.
			The is"Method" is not required by other code generated by Castor.
		-->
		<exec executable="${basedir}/sfk" 
			dir="${targetdir}/${packageName}" output="NUL">
			<arg value="patch"/>
			<arg value="${basedir}/beanpatch.txt"/>
			<arg value="-nopid"/>
		</exec>
		
		<!-- Change all CRLFs to LFs in the descriptor files -->
		<!-- (The previous execution of sfk puts CRLFs in) -->
		<fixcrlf srcdir="${targetdir}/${packageName}/descriptors" eol="unix">
		</fixcrlf>

		<fixcrlf srcdir="${targetdir}/${packageName}" eol="unix">
		</fixcrlf>

	</target>
</project>